{"ast":null,"code":"var _jsxFileName = \"F:\\\\lrnr-assignment\\\\src\\\\Components\\\\editor.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport '../../src/editor.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Editor(menuData) {\n  _s();\n\n  const [style, setStyle] = useState('');\n  const [Size, setSize] = useState('');\n\n  let bold = () => {\n    setStyle(\"bold\");\n    document.getElementById('header').style.fontStyle = 'normal';\n  };\n\n  let italic = () => {\n    setStyle(\"italic\");\n    document.getElementById('header').style.fontStyle = 'italic';\n  };\n\n  let h1 = () => {\n    setSize(\"h1\");\n    document.getElementById('header').style.fontSize = '2em';\n  };\n\n  let h2 = () => {\n    setSize(\"h2\");\n    document.getElementById('header').style.fontSize = '1.5em';\n  };\n  /*\r\n    let headingFormat = () => {\r\n      style === 'italic'?\r\n      document.getElementById('header').style.fontStyle = 'italic':\r\n      document.getElementById('header').style.fontStyle = 'normal'\r\n      Size === 'h1' ?\r\n      document.getElementById('header').style.fontSize = '2em':\r\n      document.getElementById('header').style.fontSize = ''\r\n      Size === 'h2' ?\r\n      document.getElementById('header').style.fontSize = '1.5em':\r\n      document.getElementById('header').style.fontSize = ''\r\n    }*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor\",\n    children: [documenteditor.selection.paragraphFormat.leftIndent = 24, /*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"header\",\n      children: menuData.menuData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"format\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: italic,\n        children: \"I\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: bold,\n        children: \"B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: h1,\n        children: \"H1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: h2,\n        children: \"H2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }, this), console.log(menuData), console.log(menuData.menuData.content), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: menuData.menuData.type === 'img' || menuData.menuData.type === 'video' ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require('../../images/' + menuData.menuData.content).default,\n        alt: \"noimage\",\n        height: 200,\n        width: 200\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 8\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: menuData.menuData.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Editor, \"PRynt9CvXcRNM7nCUtDE1k+MkSw=\");\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["F:/lrnr-assignment/src/Components/editor.js"],"names":["React","useState","Editor","menuData","style","setStyle","Size","setSize","bold","document","getElementById","fontStyle","italic","h1","fontSize","h2","documenteditor","selection","paragraphFormat","leftIndent","title","console","log","content","type","require","default"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport '../../src/editor.css';\r\nimport {useState} from 'react'\r\n\r\nfunction Editor(menuData) {\r\n  const [style,setStyle] = useState('');\r\n  const [Size,setSize] = useState('');\r\n\r\nlet bold = () => {\r\n  setStyle(\"bold\");\r\n  document.getElementById('header').style.fontStyle = 'normal';\r\n}\r\nlet italic = () => {\r\nsetStyle(\"italic\");\r\ndocument.getElementById('header').style.fontStyle = 'italic';\r\n}\r\n\r\nlet h1 = () => {\r\n  setSize(\"h1\");\r\n  document.getElementById('header').style.fontSize = '2em';\r\n}\r\nlet h2 = () => {\r\n  setSize(\"h2\");\r\n  document.getElementById('header').style.fontSize = '1.5em';\r\n}\r\n\r\n\r\n\r\n/*\r\n  let headingFormat = () => {\r\n    style === 'italic'?\r\n    document.getElementById('header').style.fontStyle = 'italic':\r\n    document.getElementById('header').style.fontStyle = 'normal'\r\n    Size === 'h1' ?\r\n    document.getElementById('header').style.fontSize = '2em':\r\n    document.getElementById('header').style.fontSize = ''\r\n    Size === 'h2' ?\r\n    document.getElementById('header').style.fontSize = '1.5em':\r\n    document.getElementById('header').style.fontSize = ''\r\n  }*/\r\n  return (\r\n    <div className=\"editor\">\r\n      {documenteditor.selection.paragraphFormat.leftIndent= 24}\r\n     <h1 id=\"header\">{menuData.menuData.title}</h1>\r\n     <div className=\"format\">\r\n     <button onClick={italic}>I</button>\r\n     <button onClick={bold}>B</button>\r\n     <button onClick={h1}>H1</button>\r\n     <button onClick={h2}>H2</button>\r\n     </div>\r\n     {console.log(menuData)}\r\n     {console.log(menuData.menuData.content)}\r\n     <div className=\"content\">\r\n\r\n       {menuData.menuData.type === 'img' || menuData.menuData.type === 'video'?\r\n       \r\n       <img src={require('../../images/' + menuData.menuData.content).default} alt = \"noimage\" height={200} width={200}></img>\r\n       :<p>{menuData.menuData.content}</p>\r\n       }\r\n\r\n     </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Editor;\r\n"]},"metadata":{},"sourceType":"module"}